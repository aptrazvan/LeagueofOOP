Starting audit...
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Player.java:1:9: Name 'GameElements' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Player.java:27:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getHeroClass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getHeroClass' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Player.java:31:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getLevel' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getLevel' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Player.java:35:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getXP' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getXP' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Player.java:39:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'gainXP' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'gainXP' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Player.java:43:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'levelUp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'levelUp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Player.java:54:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'takeDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'takeDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Player.java:58:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getHP' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getHP' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Player.java:62:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'resetHP' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'resetHP' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Player.java:63:76: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Player.java:67:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'move' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'move' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Player.java:86:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getPosition' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getPosition' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Player.java:90:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'equalsPosition' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'equalsPosition' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Player.java:94:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getAbilities' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getAbilities' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Player.java:98:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'accept' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'accept' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Player.java:98:24: Parameter ability should be final. [FinalParameters]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Player.java:102:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'addEffect' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'addEffect' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Player.java:115:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'resolveEffects' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'resolveEffects' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Player.java:136:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setIncapacitated' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setIncapacitated' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Player.java:140:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getIncapacitated' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getIncapacitated' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Slam.java:1:9: Name 'GameElements' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Slam.java:3: Using the '.*' form of import should be avoided - GameElements.Constants.*. [AvoidStarImport]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Slam.java:58:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Deflect.java:1:9: Name 'GameElements' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Deflect.java:3: Using the '.*' form of import should be avoided - GameElements.Constants.*. [AvoidStarImport]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Deflect.java:18:51: '0.35f' is a magic number. [MagicNumber]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Deflect.java:18:59: '0.02f' is a magic number. [MagicNumber]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Deflect.java:18:79: '0.7f' is a magic number. [MagicNumber]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Deflect.java:18:85: '*' should be on a new line. [OperatorWrap]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Deflect.java:25:98: '/' should be on a new line. [OperatorWrap]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Deflect.java:37:97: '/' should be on a new line. [OperatorWrap]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Deflect.java:49: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Deflect.java:51:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Deflect.java:57:27: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Rogue.java:1:9: Name 'GameElements' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Rogue.java:3:34: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Rogue.java:12:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'accept' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'accept' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Rogue.java:12:24: Parameter ability should be final. [FinalParameters]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Rogue.java:16:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'getMaxHP' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'getMaxHP' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Rogue.java:17:16: '600' is a magic number. [MagicNumber]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Rogue.java:17:22: '40' is a magic number. [MagicNumber]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Paralysis.java:1:9: Name 'GameElements' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Paralysis.java:3: Using the '.*' form of import should be avoided - GameElements.Constants.*. [AvoidStarImport]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Paralysis.java:72:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Ability.java:1:9: Name 'GameElements' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Ability.java:4:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Ability.java:5:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Ability.java:6:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Ability.java:7:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Ability.java:8:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Ability.java:9:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Ability.java:10:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Ignite.java:1:9: Name 'GameElements' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Ignite.java:3: Using the '.*' form of import should be avoided - GameElements.Constants.*. [AvoidStarImport]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Ignite.java:18:84: '*' should be on a new line. [OperatorWrap]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Ignite.java:67:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Wizard.java:1:9: Name 'GameElements' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Wizard.java:15:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'accept' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'accept' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Wizard.java:15:24: Parameter ability should be final. [FinalParameters]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Wizard.java:19:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'getMaxHP' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'getMaxHP' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Wizard.java:20:16: '400' is a magic number. [MagicNumber]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Wizard.java:20:22: '30' is a magic number. [MagicNumber]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Wizard.java:23:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'getDamageReceived' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'getDamageReceived' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Wizard.java:27:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'setDamageReceived' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'setDamageReceived' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Wizard.java:27:35: Parameter damage should be final. [FinalParameters]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Wizard.java:31:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'addDamageReceived' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'addDamageReceived' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Wizard.java:31:35: Parameter damage should be final. [FinalParameters]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Backstab.java:1:9: Name 'GameElements' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Backstab.java:3: Using the '.*' form of import should be avoided - GameElements.Constants.*. [AvoidStarImport]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Backstab.java:7:11: Variable 'boostTerrain' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Backstab.java:8:9: Variable 'abilityCounter' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Backstab.java:18:88: '*' should be on a new line. [OperatorWrap]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Backstab.java:25:84: '*' should be on a new line. [OperatorWrap]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Backstab.java:32:98: '*' should be on a new line. [OperatorWrap]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Backstab.java:54: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Backstab.java:59:39: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Backstab.java:62:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/XPTable.java:1:9: Name 'GameElements' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/XPTable.java:5: Class XPTable should be declared as final. [FinalClass]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/XPTable.java:12:29: '21' is a magic number. [MagicNumber]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/XPTable.java:13:26: '200' is a magic number. [MagicNumber]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/XPTable.java:13:32: '50' is a magic number. [MagicNumber]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Drain.java:1:9: Name 'GameElements' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Drain.java:3: Using the '.*' form of import should be avoided - GameElements.Constants.*. [AvoidStarImport]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Drain.java:17:97: '/' should be on a new line. [OperatorWrap]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Drain.java:18:94: '*' should be on a new line. [OperatorWrap]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Drain.java:25:92: '/' should be on a new line. [OperatorWrap]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Drain.java:26:86: '*' should be on a new line. [OperatorWrap]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Drain.java:33:92: '/' should be on a new line. [OperatorWrap]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Drain.java:34:86: '*' should be on a new line. [OperatorWrap]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Drain.java:41:91: '/' should be on a new line. [OperatorWrap]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Drain.java:42:84: '*' should be on a new line. [OperatorWrap]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Drain.java:53: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Drain.java:55:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Fireblast.java:1:9: Name 'GameElements' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Fireblast.java:3: Using the '.*' form of import should be avoided - GameElements.Constants.*. [AvoidStarImport]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Fireblast.java:6:9: Variable 'boostLevel' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Fireblast.java:7:11: Variable 'boostTerrain' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Fireblast.java:17: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Fireblast.java:51: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Fireblast.java:53:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Knight.java:1:9: Name 'GameElements' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Knight.java:12:5: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'accept' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'accept' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Knight.java:12:24: Parameter ability should be final. [FinalParameters]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Knight.java:16:5: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'getMaxHP' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'getMaxHP' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Knight.java:17:16: '900' is a magic number. [MagicNumber]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Knight.java:17:22: '80' is a magic number. [MagicNumber]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Pyromancer.java:1:9: Name 'GameElements' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Pyromancer.java:12:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'accept' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'accept' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Pyromancer.java:12:24: Parameter ability should be final. [FinalParameters]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Pyromancer.java:16:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'getMaxHP' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'getMaxHP' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Pyromancer.java:17:16: '500' is a magic number. [MagicNumber]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Pyromancer.java:17:22: '50' is a magic number. [MagicNumber]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Constants.java:1:9: Name 'GameElements' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Constants.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/HPTable.java:1:9: Name 'GameElements' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/HPTable.java:5: Class HPTable should be declared as final. [FinalClass]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/HPTable.java:11:38: '500' is a magic number. [MagicNumber]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/HPTable.java:12:38: '50' is a magic number. [MagicNumber]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/HPTable.java:13:34: '900' is a magic number. [MagicNumber]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/HPTable.java:14:34: '80' is a magic number. [MagicNumber]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/HPTable.java:15:34: '400' is a magic number. [MagicNumber]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/HPTable.java:16:34: '30' is a magic number. [MagicNumber]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/HPTable.java:17:33: '600' is a magic number. [MagicNumber]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/HPTable.java:18:33: '40' is a magic number. [MagicNumber]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Target.java:1:9: Name 'GameElements' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Target.java:4:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Map.java:1:9: Name 'GameElements' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Map.java:30:34: Parameter xCoord should be final. [FinalParameters]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Map.java:30:46: Parameter yCoord should be final. [FinalParameters]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Game.java:1:9: Name 'GameElements' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Game.java:13: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Game.java:38:39: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Game.java:39:27: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Game.java:42:39: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Game.java:43:27: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Game.java:50:40: '200' is a magic number. [MagicNumber]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Game.java:50:90: '40' is a magic number. [MagicNumber]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Game.java:51:40: '200' is a magic number. [MagicNumber]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Game.java:51:90: '40' is a magic number. [MagicNumber]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Game.java:57:40: '200' is a magic number. [MagicNumber]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Game.java:57:90: '40' is a magic number. [MagicNumber]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Game.java:61:40: '200' is a magic number. [MagicNumber]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Game.java:61:90: '40' is a magic number. [MagicNumber]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Game.java:111:29: Parameter mInputPath should be final. [FinalParameters]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Game.java:111:48: Parameter mOutputPath should be final. [FinalParameters]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Game.java:120: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Game.java:120:107: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Game.java:121: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Game.java:122: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Game.java:122:111: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Game.java:123: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Execute.java:1:9: Name 'GameElements' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Execute.java:3: Using the '.*' form of import should be avoided - GameElements.Constants.*. [AvoidStarImport]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Execute.java:18: Line is longer than 100 characters (found 124). [LineLength]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Execute.java:18:80: '40.0f' is a magic number. [MagicNumber]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Execute.java:20:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Execute.java:22: Line is longer than 100 characters (found 151). [LineLength]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Execute.java:30: Line is longer than 100 characters (found 122). [LineLength]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Execute.java:32:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Execute.java:34: Line is longer than 100 characters (found 143). [LineLength]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Execute.java:42: Line is longer than 100 characters (found 122). [LineLength]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Execute.java:45:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Execute.java:47: Line is longer than 100 characters (found 143). [LineLength]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Execute.java:48: Line is longer than 100 characters (found 124). [LineLength]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Execute.java:56: Line is longer than 100 characters (found 120). [LineLength]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Execute.java:58:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Execute.java:60: Line is longer than 100 characters (found 141). [LineLength]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Execute.java:71: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /home/apetroaie/Labs/POO/Project/src/GameElements/Execute.java:73:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] /home/apetroaie/Labs/POO/Project/src/main/Triplet.java:9:20: Parameter first should be final. [FinalParameters]
[ERROR] /home/apetroaie/Labs/POO/Project/src/main/Triplet.java:9:29: Parameter second should be final. [FinalParameters]
[ERROR] /home/apetroaie/Labs/POO/Project/src/main/Triplet.java:9:39: Parameter third should be final. [FinalParameters]
[ERROR] /home/apetroaie/Labs/POO/Project/src/main/Triplet.java:15:5: Class 'Triplet' looks like designed for extension (can be subclassed), but the method 'getFirst' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Triplet' final or making the method 'getFirst' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/main/Triplet.java:19:5: Class 'Triplet' looks like designed for extension (can be subclassed), but the method 'getSecond' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Triplet' final or making the method 'getSecond' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/main/Triplet.java:23:5: Class 'Triplet' looks like designed for extension (can be subclassed), but the method 'getThird' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Triplet' final or making the method 'getThird' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/main/Pair.java:8:17: Parameter first should be final. [FinalParameters]
[ERROR] /home/apetroaie/Labs/POO/Project/src/main/Pair.java:8:26: Parameter second should be final. [FinalParameters]
[ERROR] /home/apetroaie/Labs/POO/Project/src/main/Pair.java:13:5: Class 'Pair' looks like designed for extension (can be subclassed), but the method 'getKey' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pair' final or making the method 'getKey' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/main/Pair.java:16:5: Class 'Pair' looks like designed for extension (can be subclassed), but the method 'getValue' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pair' final or making the method 'getValue' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/apetroaie/Labs/POO/Project/src/main/GameInput.java:4:8: Unused import - java.util.List. [UnusedImports]
[ERROR] /home/apetroaie/Labs/POO/Project/src/main/GameInput.java:24:47: Parameter players should be final. [FinalParameters]
[ERROR] /home/apetroaie/Labs/POO/Project/src/main/GameInput.java:25:22: Parameter roundsNumber should be final. [FinalParameters]
[ERROR] /home/apetroaie/Labs/POO/Project/src/main/GameInput.java:25:40: Parameter moves should be final. [FinalParameters]
[ERROR] /home/apetroaie/Labs/POO/Project/src/main/GameInput.java:58:12: Redundant 'final' modifier. [RedundantModifier]
[ERROR] /home/apetroaie/Labs/POO/Project/src/main/Main.java:3: Using the '.*' form of import should be avoided - GameElements.*. [AvoidStarImport]
[ERROR] /home/apetroaie/Labs/POO/Project/src/main/Main.java:8:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/apetroaie/Labs/POO/Project/src/main/Main.java:10:29: Parameter args should be final. [FinalParameters]
[ERROR] /home/apetroaie/Labs/POO/Project/src/main/Main.java:12: Line is longer than 100 characters (found 117). [LineLength]
Audit done.
Checkstyle ends with 189 errors.
